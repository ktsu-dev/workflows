<Project>
  <PropertyGroup>
    <DirectoryBuildPropsFilePathActual>$([MSBuild]::NormalizePath($(MSBuildThisFileFullPath)))</DirectoryBuildPropsFilePathActual>

    <!-- These seem to only be populated when building via the IDE -->
    <SolutionExt Condition="'$(SolutionExt)' == ''">.sln</SolutionExt>
    <SolutionPath Condition="'$(SolutionPath)' == ''">$([MSBuild]::NormalizePath($([System.IO.Path]::GetFullPath($([System.IO.Directory]::GetFiles("$(MSBuildThisFileDirectory)", "*$(SolutionExt)")[0])))))</SolutionPath>
    <SolutionFileName Condition="'$(SolutionFileName)' == ''">$([System.IO.Path]::GetFileName($(SolutionPath)))</SolutionFileName>
    <SolutionName Condition="'$(SolutionName)' == ''">$([System.IO.Path]::GetFileNameWithoutExtension($(SolutionPath)))</SolutionName>
    <SolutionDir Condition="'$(SolutionDir)' == ''">$([MSBuild]::NormalizePath($([System.IO.Path]::GetDirectoryName($(SolutionPath)))))</SolutionDir>

    <!-- GitHub related properties -->
    <GitHubWorkflowFileName>dotnet.yml</GitHubWorkflowFileName>
    <GitHubCopilotInstructionsFileName>copilot-instructions.md</GitHubCopilotInstructionsFileName>
    <GitHubDir>$([MSBuild]::NormalizePath("$(SolutionDir)\.github"))</GitHubDir>
    <GitHubWorkflowDir>$([MSBuild]::NormalizePath("$(GitHubDir)\workflows"))</GitHubWorkflowDir>
    <GitHubWorkflowFilePath>$([MSBuild]::NormalizePath("$(GitHubWorkflowDir)\$(GitHubWorkflowFileName)"))</GitHubWorkflowFilePath>
    <GitHubCopilotInstructionsFilePath>$([MSBuild]::NormalizePath("$(GitHubDir)\$(GitHubCopilotInstructionsFileName)"))</GitHubCopilotInstructionsFilePath>

    <!-- git related files -->
    <GitIgnoreFileName>.gitignore</GitIgnoreFileName>
    <GitAttributesFileName>.gitattributes</GitAttributesFileName>
    <GitConfigFileName>.gitconfig</GitConfigFileName>
    <GitModulesFileName>.gitmodules</GitModulesFileName>
    <GitMailMapFileName>.mailmap</GitMailMapFileName>
    <GitIgnoreFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitIgnoreFileName)"))</GitIgnoreFilePath>
    <GitAttributesFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitAttributesFileName)"))</GitAttributesFilePath>
    <GitConfigFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitConfigFileName)"))</GitConfigFilePath>
    <GitModulesFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitModulesFileName)"))</GitModulesFilePath>
    <GitMailMapFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitMailMapFileName)"))</GitMailMapFilePath>

    <!-- Build related files -->
    <DirectoryBuildPropsFileName>Directory.Build.props</DirectoryBuildPropsFileName>
    <DirectoryBuildTargetsFileName>Directory.Build.targets</DirectoryBuildTargetsFileName>
    <EditorConfigFileName>.editorconfig</EditorConfigFileName>
    <RunSettingsFileName>.runsettings</RunSettingsFileName>
    <DirectoryBuildPropsFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(DirectoryBuildPropsFileName)"))</DirectoryBuildPropsFilePath>
    <DirectoryBuildTargetsFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(DirectoryBuildTargetsFileName)"))</DirectoryBuildTargetsFilePath>
    <EditorConfigFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(EditorConfigFileName)"))</EditorConfigFilePath>
    <RunSettingsFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(RunSettingsFileName)"))</RunSettingsFilePath>

    <!-- Primary Project properties-->
    <PrimaryProjectName>$(SolutionName)</PrimaryProjectName>
    <PrimaryProjectFileName>$(PrimaryProjectName).csproj</PrimaryProjectFileName>
    <PrimaryProjectPath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(PrimaryProjectName)\$(PrimaryProjectFileName)"))</PrimaryProjectPath>
    <PrimaryProjectExists>false</PrimaryProjectExists>
    <PrimaryProjectExists Condition="Exists($(PrimaryProjectPath))">true</PrimaryProjectExists>

    <!-- Descriptive properties -->
    <ContributorsFileName>CONTRIBUTORS.md</ContributorsFileName>
    <ContributorsFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(ContributorsFileName)"))</ContributorsFilePath>
    <Contributors Condition="Exists($(ContributorsFilePath))">$([System.IO.File]::ReadAllText($(ContributorsFilePath)).Trim())</Contributors>

    <ChangelogFileName>CHANGELOG.md</ChangelogFileName>
    <ChangelogFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(ChangelogFileName)"))</ChangelogFilePath>
    <Changelog Condition="Exists($(ChangelogFilePath))">$([System.IO.File]::ReadAllText($(ChangelogFilePath)).Trim())</Changelog>

    <ReadmeFileName>README.md</ReadmeFileName>
    <ReadmeFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(ReadmeFileName)"))</ReadmeFilePath>
    <Readme Condition="Exists($(ReadmeFilePath))">$([System.IO.File]::ReadAllText($(ReadmeFilePath)).Trim())</Readme>

    <LicenseFileName>LICENSE.md</LicenseFileName>
    <LicenseFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(LicenseFileName)"))</LicenseFilePath>
    <License Condition="Exists($(LicenseFilePath))">$([System.IO.File]::ReadAllText($(LicenseFilePath)).Trim())</License>

    <AuthorsFileName>AUTHORS.md</AuthorsFileName>
    <AuthorsFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(AuthorsFileName)"))</AuthorsFilePath>
    <Authors Condition="Exists($(AuthorsFilePath))">$([System.IO.File]::ReadAllText($(AuthorsFilePath)).Trim())</Authors>

    <AuthorsUrlFileName>AUTHORS.url</AuthorsUrlFileName>
    <AuthorsUrlFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(AuthorsUrlFileName)"))</AuthorsUrlFilePath>
    <AuthorsUrl Condition="Exists($(AuthorsUrlFilePath))">$([System.IO.File]::ReadAllText($(AuthorsUrlFilePath)).Trim())</AuthorsUrl>

    <ProjectUrlFileName>PROJECT.url</ProjectUrlFileName>
    <ProjectUrlFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(ProjectUrlFileName)"))</ProjectUrlFilePath>
    <ProjectUrl Condition="Exists($(ProjectUrlFilePath))">$([System.IO.File]::ReadAllText($(ProjectUrlFilePath)).Trim())</ProjectUrl>

    <CopyrightFileName>COPYRIGHT.md</CopyrightFileName>
    <CopyrightFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(CopyrightFileName)"))</CopyrightFilePath>
    <Copyright Condition="Exists($(CopyrightFilePath))">$([System.IO.File]::ReadAllText($(CopyrightFilePath)).Trim())</Copyright>

    <VersionFileName>VERSION.md</VersionFileName>
    <VersionFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(VersionFileName)"))</VersionFilePath>
    <Version Condition="Exists($(VersionFilePath))">$([System.IO.File]::ReadAllText($(VersionFilePath)).Trim())</Version>

    <DescriptionFileName>DESCRIPTION.md</DescriptionFileName>
    <DescriptionFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(DescriptionFileName)"))</DescriptionFilePath>
    <Description Condition="Exists($(DescriptionFilePath))">$([System.IO.File]::ReadAllText($(DescriptionFilePath)).Trim())</Description>

    <IconFileName>icon.png</IconFileName>
    <IconFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(IconFileName)"))</IconFilePath>

    <!-- Namespace properties -->
    <AuthorsNamespace>$(Authors.Replace(" ", "").Replace('-', '.').Split('.')[0])</AuthorsNamespace>
    <SolutionNamespace>$(SolutionName.Replace(" ", ""))</SolutionNamespace>
    <ProjectNamespace>$(MSBuildProjectName.Replace(" ", ""))</ProjectNamespace>
    <RootNamespace>$(AuthorsNamespace).$(ProjectNamespace)</RootNamespace>
    <AssemblyName>$(RootNamespace)</AssemblyName>
    <Title>$(AssemblyName)</Title>
    <Company>$(Authors)</Company>
    <Product>$(AssemblyName)</Product>

    <!-- Assembly validation properties -->
    <ApiCompatStrictMode>true</ApiCompatStrictMode>
    <ApiCompatValidateAssemblies>true</ApiCompatValidateAssemblies>

    <!-- Assembly attribute properties -->
    <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    <!--<GeneratedAssemblyInfoFile>assemblyinfo.cs</GeneratedAssemblyInfoFile>-->

    <!-- Framework properties -->
    <!--<TargetFramework>net9.0</TargetFramework>-->
    <TargetFrameworks>net8.0;net9.0</TargetFrameworks>

    <!-- Package properties -->
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(Version)</PackageVersion>
    <PackageIcon>$(IconFileName)</PackageIcon>
    <PackageReadmeFile>$(ReadmeFileName)</PackageReadmeFile>
    <PackageLicenseFile>$(LicenseFileName)</PackageLicenseFile>
    <PackageReleaseNotes>$(Changelog)</PackageReleaseNotes>
    <PackageDescription>$(Description)</PackageDescription>
    <PackageProjectUrl>$(ProjectUrl)</PackageProjectUrl>
    <IncludeSource>true</IncludeSource>
    <IncludeContentInPack>true</IncludeContentInPack>
    <PackRelease>true</PackRelease>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <IsPackable>false</IsPackable>

    <!-- Package validation properties -->
    <ApiCompatEnableRuleAttributesMustMatch>true</ApiCompatEnableRuleAttributesMustMatch>
    <ApiCompatEnableRuleCannotChangeParameterName>true</ApiCompatEnableRuleCannotChangeParameterName>
    <!--<ApiCompatGenerateSuppressionFile>true</ApiCompatGenerateSuppressionFile>-->
    <!--<ApiCompatPermitUnnecessarySuppressions>true</ApiCompatPermitUnnecessarySuppressions>-->
    <!--<ApiCompatPreserveUnnecessarySuppressions>true</ApiCompatPreserveUnnecessarySuppressions>-->
    <!-- <ApiCompatRespectInternals>true</ApiCompatRespectInternals> -->
    <EnablePackageValidation>true</EnablePackageValidation>
    <EnableStrictModeForBaselineValidation>true</EnableStrictModeForBaselineValidation>
    <EnableStrictModeForCompatibleFrameworksInPackage>true</EnableStrictModeForCompatibleFrameworksInPackage>
    <EnableStrictModeForCompatibleTfms>true</EnableStrictModeForCompatibleTfms>

    <!-- Publish-related properties -->
    <AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <ErrorOnDuplicatePublishOutputFiles>true</ErrorOnDuplicatePublishOutputFiles>
    <IsPublishable>false</IsPublishable>
    <ProduceReferenceAssemblyInOutDir>true</ProduceReferenceAssemblyInOutDir>
    <PublishDocumentationFile>true</PublishDocumentationFile>
    <PublishDocumentationFiles>true</PublishDocumentationFiles>
    <PublishReferencesDocumentationFiles>true</PublishReferencesDocumentationFiles>
    <PublishRelease>true</PublishRelease>
    <PublishSelfContained>true</PublishSelfContained>
    <RollForward>LatestMinor</RollForward>
    <RuntimeFrameworkVersion>9.0.0</RuntimeFrameworkVersion>
    <!-- <RuntimeIdentifier>win-x64</RuntimeIdentifier> -->
    <RuntimeIdentifiers>win-x64;osx-x64;linux-x64</RuntimeIdentifiers>
    <!-- <SatelliteResourceLanguages>en-US;de-DE</SatelliteResourceLanguages> -->
    <!-- <SelfContained>true</SelfContained> -->
    <!-- <UseAppHost>false</UseAppHost> -->

    <!-- Build-related properties -->
    <ContinuousIntegrationBuild>false</ContinuousIntegrationBuild>
    <ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true' Or '$(TF_BUILD)' == 'true'">true</ContinuousIntegrationBuild>
    <CopyDebugSymbolFilesFromPackages>true</CopyDebugSymbolFilesFromPackages>
    <CopyDocumentationFilesFromPackages>true</CopyDocumentationFilesFromPackages>
    <DisableImplicitFrameworkDefines>false</DisableImplicitFrameworkDefines>
    <!-- <DocumentationFile>path/to/file.xml</DocumentationFile> -->
    <!-- <EmbeddedResourceUseDependentUponConvention>true</EmbeddedResourceUseDependentUponConvention> -->
    <EnablePreviewFeatures>false</EnablePreviewFeatures>
    <!-- <EnableWindowsTargeting>true</EnableWindowsTargeting> -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GenerateRequiresPreviewFeaturesAttribute>false</GenerateRequiresPreviewFeaturesAttribute>
    <OptimizeImplicitlyTriggeredBuild>false</OptimizeImplicitlyTriggeredBuild>
    <DisableRuntimeMarshalling>false</DisableRuntimeMarshalling>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>

    <!-- Default item inclusion properties -->
    <!-- <DefaultItemExcludes>$(DefaultItemExcludes);**/*.myextension</DefaultItemExcludes> -->
    <!-- <DefaultItemExcludesInProjectFolder>$(DefaultItemExcludesInProjectFolder);**/myprefix*/**</DefaultItemExcludesInProjectFolder> -->
    <EnableDefaultItems>true</EnableDefaultItems>
    <EnableDefaultCompileItems>true</EnableDefaultCompileItems>
    <EnableDefaultEmbeddedResourceItems>true</EnableDefaultEmbeddedResourceItems>
    <EnableDefaultNoneItems>true</EnableDefaultNoneItems>

    <!-- Code analysis properties -->
    <AnalysisLevel>latest-all</AnalysisLevel>
    <CodeAnalysisTreatWarningsAsErrors>true</CodeAnalysisTreatWarningsAsErrors>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>

    <!-- Runtime configuration properties -->
    <!-- <AutoreleasePoolSupport>true</AutoreleasePoolSupport> -->
    <!-- <ConcurrentGarbageCollection>false</ConcurrentGarbageCollection> -->
    <InvariantGlobalization>true</InvariantGlobalization>
    <NeutralLanguage>en-US</NeutralLanguage>
    <!-- <PredefinedCulturesOnly>false</PredefinedCulturesOnly> -->
    <!-- <RetainVMGarbageCollection>true</RetainVMGarbageCollection> -->
    <!-- <ServerGarbageCollection>true</ServerGarbageCollection> -->
    <!-- <ThreadPoolMaxThreads>20</ThreadPoolMaxThreads> -->
    <!-- <ThreadPoolMinThreads>4</ThreadPoolMinThreads> -->
    <!-- <TieredCompilation>false</TieredCompilation> -->
    <!-- <TieredCompilationQuickJit>false</TieredCompilationQuickJit> -->
    <!-- <TieredCompilationQuickJitForLoops>true</TieredCompilationQuickJitForLoops> -->
    <!-- <TieredPGO>true</TieredPGO> -->
    <!-- <UseWindowsThreadPool>true</UseWindowsThreadPool> -->

    <!-- Reference-related properties -->
    <!-- <AssetTargetFallback>net461</AssetTargetFallback> -->
    <!-- <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences> -->
    <!-- <DisableTransitiveFrameworkReferenceDownloads>true</DisableTransitiveFrameworkReferenceDownloads> -->
    <!-- <DisableTransitiveProjectReferences>true</DisableTransitiveProjectReferences> -->

    <!-- Restore-related properties -->
    <!-- <RestoreIgnoreFailedSource>true</RestoreIgnoreFailedSource> -->
    <!-- <UseMauiEssentials>true</UseMauiEssentials> -->
    <!-- <ValidateExecutableReferencesMatchSelfContained>false</ValidateExecutableReferencesMatchSelfContained> -->
    <!-- <WindowsSdkPackageVersion>10.0.19041.18</WindowsSdkPackageVersion> -->

    <!-- Run-related properties -->
    <!-- <RunArguments>-mode dryrun</RunArguments> -->
    <!-- <RunWorkingDirectory>c:\temp</RunWorkingDirectory> -->

    <!-- SDK-related properties -->
    <!-- <SdkAnalysisLevel>8.0.400</SdkAnalysisLevel> -->

    <!-- Test project–related properties -->
    <IsTestProject>false</IsTestProject>
    <!-- <IsTestingPlatformApplication>false</IsTestingPlatformApplication> -->
    <!-- <EnableAspireTesting>false</EnableAspireTesting> -->
    <!-- <EnablePlaywright>false</EnablePlaywright> -->
    <EnableMSTestRunner>true</EnableMSTestRunner>
    <EnableNUnitRunner>false</EnableNUnitRunner>
    <!-- <GenerateTestingPlatformEntryPoint>false</GenerateTestingPlatformEntryPoint> -->
    <!-- <TestingPlatformCaptureOutput>false</TestingPlatformCaptureOutput> -->
    <!-- <TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport> -->
    <!-- <TestingPlatformShowTestsFailure>false</TestingPlatformShowTestsFailure> -->
    <TestingExtensionsProfile>Default</TestingExtensionsProfile>
    <UseVSTest>true</UseVSTest>

    <!-- Hosting-related properties -->
    <!-- <AppHostDotNetSearch>Global</AppHostDotNetSearch> -->
    <!-- <AppHostRelativeDotNet>./relative/path/to/runtime</AppHostRelativeDotNet> -->
    <!-- <EnableComHosting>True</EnableComHosting> -->
    <!-- <EnableDynamicLoading>true</EnableDynamicLoading> -->

    <!-- Generated file properties -->
    <!-- <DisableImplicitNamespaceImports>true</DisableImplicitNamespaceImports> -->
    <ImplicitUsings>enable</ImplicitUsings>

    <!-- C# Compiler Options to report errors and warnings -->
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <NoWarn>CA1724;CA1034;CA1000;CA2260;CA1515;</NoWarn>
    <!-- CA1724: Type names should not match namespaces -->
    <!-- CA1034: Nested types should not be visible -->
    <!-- CA1000: Do not declare static members on generic types -->
    <!-- CA2260: Implement ISerializable correctly -->
    <!-- CA1812: Avoid uninstantiated internal classes -->
    <!-- CA1515: Override methods should call base methods -->

    <!-- JsonSerializer properties -->
    <JsonSerializerIsReflectionEnabledByDefault>true</JsonSerializerIsReflectionEnabledByDefault>

  </PropertyGroup>

</Project>

