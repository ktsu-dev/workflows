name: 'build-dotnet-library'
run-name: "${{ github.repository }} build-dotnet-library"

on:
  workflow_call:

env:
  SHOULD_RELEASE: ${{ github.ref == 'refs/heads/main' || (github.base_ref == 'refs/heads/main' && github.event.pull_request.merged == 'true') }}
  
jobs:
  build-test-publish:
    name: "${{ github.repository }} build-dotnet-library"
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x
      
      - name: Install dotnet-script
        run: dotnet tool install -g dotnet-script
      
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Read version
        id: versionfile
        uses: juliangruber/read-file-action@v1
        with:
          path: ./VERSION
          trim: true

      - name: Bump version
        id: semver
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        uses: nguyenvukhang/semver-increment@v1
        with:
          increment: ${{ contains(steps.versionfile.outputs.content, 'alpha') && 'prerelease' || 'patch' }}
          identifier: 'alpha'
          version-file: 'VERSION'
          version-regex: '^(.*)'
      
      - name: Build
        run: dotnet build --no-incremental

      - name: Test
        run: dotnet test

      - name: Component detection 
        uses: advanced-security/component-detection-dependency-submission-action@v0.0.2
        
      - name: Build the package for nuget
        run: dotnet pack --include-source --configuration Release --output . -p:SymbolPackageFormat=snupkg -p:PackageLicenseFile=LICENSE -p:PackageReadmeFile=README.md -p:RepositoryUrl=${{ github.server_url }}/${{ github.repository }} -p:RepositoryCommit=${{ github.sha }} -p:PackageProjectUrl=${{ github.server_url }}/${{ github.repository }} -p:IncludeContentInPack=true

      - name: Publish to GitHub
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        run: dotnet nuget push *.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate
      
      - name: Publish to NuGet
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        run: dotnet nuget push *.nupkg --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      
      - name: Release
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.*nupkg"
          tag: v${{ steps.semver.outputs.version }}
          commit: main
          allowUpdates: false
          skipIfReleaseExists: true
          omitBody: true
          generateReleaseNotes: true
          replacesArtifacts: false
          makeLatest: true
