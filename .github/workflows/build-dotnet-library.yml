name: 'build-dotnet-library'

on:
  workflow_call:

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
            submodules: recursive
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Install dotnet-script
        run: dotnet tool install -g dotnet-script
      - name: Run Tests
        run: dotnet test --collect:"XPlat Code Coverage"
      - name: Upload coverage reports to Codecov
        if: ${{ !cancelled() && secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Build the package for nuget
        run: dotnet pack --include-source --configuration Release --output . -p:SymbolPackageFormat=snupkg -p:PackageLicenseFile=LICENSE -p:PackageReadmeFile=README.md -p:RepositoryUrl=${{ github.server_url }}/${{ github.repository }} -p:RepositoryCommit=${{ github.sha }} -p:PackageProjectUrl=${{ github.server_url }}/${{ github.repository }} -p:IncludeContentInPack=true
      - name: Publish to NuGet
        if: ${{ github.event_name == 'push' && hashFiles('*.nupkg') != ''  && secrets.NUGET_KEY != '' }}
        run: dotnet nuget push *.nupkg --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      - name: Publish to GitHub
        if: ${{ github.event_name == 'push' &&  hashFiles('*.nupkg') != ''  && secrets.GITHUB_TOKEN != '' }}
        run: dotnet nuget push *.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate
