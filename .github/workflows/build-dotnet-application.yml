on:
  workflow_call:

jobs:
  build-test-pack-release:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [win, linux, maccatalyst]
        arch: [x86, x64, arm64]
    steps:
      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            7.0.x
            8.0.x
      - name: Install dotnet-script
        run: dotnet tool install -g dotnet-script
      - name: Install coverage tool
        run: dotnet tool install --global dotnet-coverage
      - name: Install NSIS
        run: |
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin
          scoop update
          scoop bucket add extras
          scoop install nsis
      - name: Install SonarCloud scanner
        shell: powershell
        run: dotnet tool update dotnet-sonarscanner
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Build and Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          dotnet-sonarscanner begin /k:"${{ github.event.organization.login }}_${{ github.event.repository.name }}" /o:"ktsu-io" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental -r ${{ matrix.platform }}-${{ matrix.arch }}
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      - name: Build ${{ matrix.platform }}-${{ matrix.arch }} executable
        run: dotnet publish -o ./publish-${{ matrix.platform }}-${{ matrix.arch }} --self-contained -r ${{ matrix.platform }}-${{ matrix.arch }} -f net.8.0
      - name: Build NSIS installer
        run: makensis setup.nsi
      - name: Read VERSION
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./VERSION
          trim: true
      - name: Release
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "setup.exe"
          tag: ${{ steps.version.outputs.content }}
          commit: main
          allowUpdates: false
          skipIfReleaseExists: true
          omitBody: true
          generateReleaseNotes: true
          replacesArtifacts: false
          makeLatest: true
